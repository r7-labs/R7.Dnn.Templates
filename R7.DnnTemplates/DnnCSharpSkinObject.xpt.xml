<?xml version="1.0"?>
<Template originator="Roman M. Yagodin" created="2014/05/15">
	<!-- Template Header -->
	<TemplateConfiguration>
		<_Name>C# compiled skin object</_Name>
		<_Category>C#/DNN Platform</_Category>
		<Icon>md-aspnet-empty-project|res:project-dnn-overlay-32.png</Icon>
		<LanguageName>C#</LanguageName>
        <ProjectType>AspNetApp</ProjectType>
		<_Description>Creates a new DNN Platform C# compiled skin object project.

NOTE: Ensure that 'Create directory for solution' flag is checked.</_Description>
	</TemplateConfiguration>
	<!-- Actions -->
	<Actions>
		<Open filename="SETUP.md" />
	</Actions>
	<!-- Template Content -->
	<Combine name="${ProjectName}" directory=".">
		<Options>
			<StartupProject>"${ProjectName}</StartupProject>
		</Options>
		<Project name="${ProjectName}" directory="." type="AspNetApp">
			<!-- Causes errors in ASP.NET code completition! 
				<Options Target="Library" TargetFrameworkVersion="4.0" /> 
			-->
			<References>
				<Reference type="Package" refto="System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
				<Reference type="Package" refto="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
				<Reference type="Package" refto="System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
				<Reference type="Package" refto="System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
				<Reference type="Package" refto="System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
				<Reference type="Package" refto="System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
				<Reference type="Package" refto="System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
				<Reference type="Package" refto="System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
			</References>
            <Packages>
                <Package id="R7.DotNetNuke.Extensions" version="0.10.0" />
            </Packages>
			<Files>
                <FileTemplateReference TemplateID="CSharpAssemblyInfo" name="AssemblyInfo.cs" />
                <Directory name="SqlDataProvider">
				<File name="00.01.00.SqlDataProvider"><![CDATA[-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is "dbo." for database owner and "" for object qualifier 

-- Create tables

IF NOT EXISTS (select * from sys.objects where object_id = object_id (N'{databaseOwner}[{objectQualifier}${ProjectName}_${ProjectName}s]') and type in (N'U'))
BEGIN
    CREATE TABLE {databaseOwner}[{objectQualifier}${ProjectName}_${ProjectName}s]
    (
        [${ProjectName}ID] int NOT NULL IDENTITY (1, 1),
        [TabID] int NOT NULL,
        [Content] nvarchar(max) NOT NULL,
        [CreatedByUser] int NOT NULL,
        [CreatedOnDate] datetime NOT NULL DEFAULT (GETDATE ())
        CONSTRAINT [PK_{objectQualifier}${ProjectName}_${ProjectName}s] PRIMARY KEY CLUSTERED (${ProjectName}ID)
        CONSTRAINT [FK_{objectQualifier}${ProjectName}_${ProjectName}s_{objectQualifier}Tabs] FOREIGN KEY (TabID)
            REFERENCES {databaseOwner}[{objectQualifier}Tabs] (TabID) ON DELETE CASCADE
    )
        
    CREATE NONCLUSTERED INDEX [IX_{objectQualifier}${ProjectName}_${ProjectName}s_TabID] 
        ON {databaseOwner}[{objectQualifier}${ProjectName}_${ProjectName}s] ([TabID])
END
GO
]]></File>
				<File name="Uninstall.SqlDataProvider"><![CDATA[-- NOTE: To manually execute this script you must 
-- replace {databaseOwner} and {objectQualifier} with real values. 
-- Defaults is "dbo." for database owner and "" for object qualifier 

-- Drop tables

ALTER TABLE {databaseOwner}[{objectQualifier}${ProjectName}_${ProjectName}s] 
	DROP CONSTRAINT [FK_{objectQualifier}${ProjectName}_${ProjectName}s_{objectQualifier}Tabs]
GO

DROP INDEX {databaseOwner}[{objectQualifier}${ProjectName}_${ProjectName}s].[IX_{objectQualifier}${ProjectName}_${ProjectName}s_TabID]
GO

DROP TABLE {databaseOwner}[{objectQualifier}${ProjectName}_${ProjectName}s]
GO
]]></File>
    </Directory>
				<Directory name="App_LocalResources">
					<File name="${ProjectName}.ascx.resx"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <data xml:space="preserve" name="Template.Text">
    <value>&lt;div class="[CSSCLASS]"&gt;&lt;h3&gt;[CREATEDBYUSER]: [CREATEDONDATE]&lt;/h3&gt;&lt;p&gt;[CONTENT]&lt;/p&gt;&lt;/div&gt;</value>
  </data>
  <data xml:space="preserve" name="SystemUser.Text">
    <value>System</value>
  </data>
</root>]]></File>
  <File name="${ProjectName}.ascx.ru-RU.resx"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <data xml:space="preserve" name="Template.Text">
    <value>&lt;div class="[CSSCLASS]"&gt;&lt;h3&gt;[CREATEDBYUSER]: [CREATEDONDATE]&lt;/h3&gt;&lt;p&gt;[CONTENT]&lt;/p&gt;&lt;/div&gt;</value>
  </data>
  <data xml:space="preserve" name="SystemUser.Text">
    <value>Система</value>
  </data>
</root>]]></File>
				</Directory>
				<Directory name="Data">
<File name="${ProjectName}Info.cs" AddStandardHeader="True"><![CDATA[using System;
using System.Linq;
using DotNetNuke.Data;
using DotNetNuke.ComponentModel.DataAnnotations;
using DotNetNuke.Entities.Portals;
using DotNetNuke.Entities.Users;

namespace ${ProjectName}.Data
{
	// More attributes for class:
	// Set caching for table: [Cacheable("${ProjectName}_${Name}s", CacheItemPriority.Default, 20)] 
	// Explicit mapping declaration: [DeclareColumns]
	
	// More attributes for class properties:
	// Custom column name: [ColumnName("${ProjectName}ID")]
	// Explicit include column: [IncludeColumn]
	// Note: DAL 2 has no AutoJoin analogs from PetaPOCO at this time
	
	[TableName("${ProjectName}_${ProjectName}s")]
	[PrimaryKey("${ProjectName}ID", AutoIncrement = true)]
	[Scope("TabID")]
	public class ${ProjectName}Info
	{
        #region Fields
        
		private string createdByUserName = null;

		#endregion
		
        #region Properties

		public int ${ProjectName}ID { get; set; }

		public int TabID { get; set; }

		public string Content { get; set; }

		public int CreatedByUser { get; set; }

		[ReadOnlyColumn]
		public DateTime CreatedOnDate { get; set; }
        
		[IgnoreColumn]
		public string CreatedByUserName
		{
			get
			{
				if (createdByUserName == null)
				{
					var portalId = PortalController.Instance.GetCurrentPortalSettings ().PortalId;
					var user = UserController.GetUserById (portalId, CreatedByUser);
					createdByUserName = user.DisplayName;
				}

				return createdByUserName; 
			}
		    set 
		    {
		    	createdByUserName = value;
		    }
		}

        #endregion
	}
}
]]></File>

				</Directory>
				<File name="${ProjectName}.ascx"><![CDATA[<%@ Control Language="C#" AutoEventWireup="true" CodeBehind="${ProjectName}.ascx.cs" Inherits="${ProjectName}.${ProjectName}" %>
<%@ OutputCache Duration="1200" VaryByParam="TabId" %>

<asp:Literal ID="litContent" runat="server"></asp:Literal>
]]></File>
				<File name="${ProjectName}.ascx.cs" DependsOn="${ProjectName}.ascx" AddStandardHeader="True"><![CDATA[// TODO: Convert to DAL2

using System;
using System.IO;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using DotNetNuke.UI.Skins;
using DotNetNuke.Services.Localization;
using R7.DotNetNuke.Extensions;
using R7.DotNetNuke.Extensions.Data;
using ${ProjectName}.Data;

namespace ${ProjectName}
{
	public partial class ${ProjectName} : SkinObjectBase
	{
		private string localResourceFile = null;
		private string template = null;

		public string CssClass
		{
			get 
			{
				if (!string.IsNullOrEmpty(Attributes ["CssClass"]))
					return Attributes ["CssClass"];

				return string.Empty;		
			}
		}

		private string LocalResourceFile 
		{
			get 
			{ 
				if (localResourceFile == null)
					// NOTE: ASCX control name is needed!
					localResourceFile = Localization.GetResourceFile (this, "${ProjectName}.ascx");
				
				return localResourceFile; 
			}
		}
		
		private string Template 
		{
			get 
			{
				if (template == null) 
				{
					template = Localization.GetString ("Template.Text", LocalResourceFile);
					if (string.IsNullOrEmpty (template))
						template = "Error loading template from resource file!";
				}
				
				return this.template;
			}
		}			
				
		protected override void OnLoad (EventArgs e)
		{
			base.OnLoad(e);

			if (!IsPostBack)
			{
				var dataProvider = new Dal2DataProvider ();
				var item = dataProvider.Get<${ProjectName}Info>(PortalSettings.ActiveTab.TabID);

				if (item != null)
				{
					// stub for NULL values in usernames
					if (string.IsNullOrEmpty (item.CreatedByUserName))
						item .CreatedByUserName = Localization.GetString("SystemUser.Text", LocalResourceFile);
					
					// fill template
					var content = Template.Replace ("[CREATEDONDATE]", item.CreatedOnDate.ToShortDateString ());
					content = content.Replace ("[CREATEDBYUSER]", item.CreatedByUserName);
					content = content.Replace ("[CONTENT]", item.Content);
					content = content.Replace ("[CSSCLASS]", CssClass);

					litContent.Text = content;
				}
			}
		}
	}
}
]]></File>
				<File name="${ProjectName}.ascx.controls.cs" DependsOn="${ProjectName}.ascx" ShowAutogenerationNotice="False" AddStandardHeader="False" SuppressAutoOpen="True"><![CDATA[using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;
using System.Linq;

using DotNetNuke.UI.UserControls;
using DotNetNuke.UI.WebControls;
using DotNetNuke.Web.UI.WebControls;

namespace ${ProjectName}
{
	public partial class ${ProjectName}
	{	
		protected Literal litContent;
	}
}]]></File>
  				<File name="${ProjectName}.dnn"><![CDATA[<dotnetnuke type="Package" version="5.0">
 <packages>
   <package name="${ProjectName}" type="SkinObject" version="00.01.00">
     <friendlyName>${ProjectName}</friendlyName>
     <description>This is a simple skin object to display a record from database table.</description>
     <owner>
       <name>${AuthorName}</name>
       <organization>${AuthorCompany}</organization>
       <url>http://www.${AuthorCompany}.com/${ProjectName}</url>
       <email>${AuthorEmail}</email>
     </owner>
	 <license src="license.htm" />
     <releaseNotes src="releaseNotes.htm" />
     <dependencies>
        <!-- <dependency type="CoreVersion">08.00.00</dependency> -->
        <dependency type="managedPackage" version="0.10.0">R7.DotNetNuke.Extensions</dependency>
     </dependencies>
     <components>
        <component type="SkinObject">
  			<moduleControl>
			    <controlKey>${ProjectName}</controlKey>
    			<controlSrc>/DesktopModules/${ProjectName}/${ProjectName}/${ProjectName}.ascx</controlSrc>
    			<supportsPartialRendering>false</supportsPartialRendering>
  			</moduleControl>
		</component>

       <component type="Script">
         <scripts>
           <basePath>DesktopModules\${ProjectName}\${ProjectName}</basePath>
           <script type="Install">
             <name>SqlDataProvider\00.01.00.SqlDataProvider</name>
             <version>00.01.00</version>
           </script>
           <script type="UnInstall">
             <name>SqlDataProvider\Uninstall.SqlDataProvider</name>
           </script>
         </scripts>
       </component>

       <component type="ResourceFile">
         <resourceFiles>
           <basePath>DesktopModules\${ProjectName}</basePath>
           <resourceFile>
             <name>Resources.zip</name>
           </resourceFile>
         </resourceFiles>
       </component>

       <component type="Assembly">
         <assemblies>
           <basePath>bin</basePath>
           <assembly>
             <path>bin</path>
             <name>${ProjectName}.dll</name>
           </assembly>
         </assemblies>
       </component>
    
     </components>
   </package>
 </packages>
</dotnetnuke>
]]></File>
<File name="SETUP.md"><![CDATA[# Template usage

Due to template engine limitations we need to do some will require some changes 
to be made manually.

1. You may want to disable automatic updates of CodeBehind partial classes in project options
   under "ASP.NET" page. Automatic updates is not working correctly with third-party controls 
   in the MonoDevelop / Xamarin Studio anyway. This is true at least for version 4.2.3.

2. Add to your solution new project of type "DNN packaging project" and follow instructions 
   in it's `SETUP.md` to setup packaging and local deploy.
]]></File>
   <File name="license.htm"><![CDATA[<p>This module is published under the terms of MIT/X11 License.</p>
]]></File>
   <File name="releaseNotes.htm"><![CDATA[<h3>Version 0.1.0</h3>
<p>This is the initial release.</p>
]]></File>
			</Files>
		</Project>
	</Combine>
</Template>